@page "/ChangePassword"
@using Chat.Blazor.Server.Models;
@using Chat.Blazor.Server.Services.Interfaces;
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@attribute [Authorize]


<h1>Change your password </h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors!)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="changePassModel" OnValidSubmit="ChangePass">
            <FluentValidationValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="changePassModel.Email" />
                <ValidationMessage For="@(() => changePassModel.Email)" />
            </div>
            <div class="form-group">
                <label for="old-password">Password</label>
                <InputText Id="old-password" type="password" Class="form-control" @bind-Value="changePassModel.OldPassword" />
                <ValidationMessage For="@(() => changePassModel.OldPassword)" />
            </div>
            <div class="form-group">
                <label for="new-password">New Password</label>
                <InputText Id="new-password" type="password" Class="form-control" @bind-Value="changePassModel.NewPassword" />
                <ValidationMessage For="@(() => changePassModel.NewPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private ChangePasswordModel changePassModel = new ChangePasswordModel();
    private bool ShowErrors;
    private IEnumerable<string>? Errors;

    private async Task ChangePass()
    {
        ShowErrors = false;

        var result = await AuthService.ChangePassword(changePassModel);

        if (result.Success)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

}
